// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package minerconfig

// MarshalTOML marshals as TOML.
func (m MBConfig) MarshalTOML() (interface{}, error) {
	type MBConfig struct {
		DoubleSign           bool
		VoteDisable          bool
		SkipOffsetInturn     *uint64 `toml:",omitempty"`
		BroadcastDelayBlocks uint64
		LastBlockMiningTime  uint64
	}
	var enc MBConfig
	enc.DoubleSign = m.DoubleSign
	enc.VoteDisable = m.VoteDisable
	enc.SkipOffsetInturn = m.SkipOffsetInturn
	enc.BroadcastDelayBlocks = m.BroadcastDelayBlocks
	enc.LastBlockMiningTime = m.LastBlockMiningTime
	return &enc, nil
}

// UnmarshalTOML unmarshals from TOML.
func (m *MBConfig) UnmarshalTOML(unmarshal func(interface{}) error) error {
	type MBConfig struct {
		DoubleSign           *bool
		VoteDisable          *bool
		SkipOffsetInturn     *uint64 `toml:",omitempty"`
		BroadcastDelayBlocks *uint64
		LastBlockMiningTime  *uint64
	}
	var dec MBConfig
	if err := unmarshal(&dec); err != nil {
		return err
	}
	if dec.DoubleSign != nil {
		m.DoubleSign = *dec.DoubleSign
	}
	if dec.VoteDisable != nil {
		m.VoteDisable = *dec.VoteDisable
	}
	if dec.SkipOffsetInturn != nil {
		m.SkipOffsetInturn = dec.SkipOffsetInturn
	}
	if dec.BroadcastDelayBlocks != nil {
		m.BroadcastDelayBlocks = *dec.BroadcastDelayBlocks
	}
	if dec.LastBlockMiningTime != nil {
		m.LastBlockMiningTime = *dec.LastBlockMiningTime
	}
	return nil
}
